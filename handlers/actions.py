from keyboards import inline
from utils import states
import sqlite3
from data import desc
from data.config import UID
import asyncio
admin_uids = [] 
admin_uids = UID

async def start_message(database, message):
    database()
    if database.cursor.execute(f"SELECT * FROM users WHERE uid = {message.from_user.id}").fetchone():
        pass
    else:
        database.cursor.execute(f"INSERT INTO users (uid, username, age, gender, connect, microphone, description, games, active_timer, ban_days) VALUES ({message.from_user.id}, 'unknown', 0, 'unknown', 'unknown', 'unknown','none', 'none', 60, 0)") #number ,uid, username,age, gender, connect, microphone
        #desc, games, active_timer, ban_days 
        database.db.commit()

    database.db.commit()
    database.db.close
    await message.answer(f"""{desc.start(message)}""" )
    

async def createanc_action(message, db, state, create_anc):
    db.cursor.execute("SELECT description FROM users WHERE uid = ?", (message.from_user.id,))
    desc = db.cursor.fetchone()[0]
    if desc == "none":
        await message.answer("–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –±–∞–Ω–∞–ª—å–Ω–æ–≥–æ. –í–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º.")
        await state.set_state(create_anc.name)
    else:
        await message.answer("–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–Ω–∫–µ—Ç–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–∏ÃÜ /editanc")
        await state.clear()

async def editanc_action(message, db):
    db.cursor.execute("SELECT username FROM users WHERE uid = ?", (message.from_user.id,))
    username = db.cursor.fetchone()[0]
    if username == "unknown":
        await message.answer("–£ –í–∞—Å –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å! –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–∏ÃÜ /createanc")
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = inline.edit_anc())

async def myanc_action(message, db):
    db.cursor.execute("SELECT username FROM users WHERE uid = ?", (message.from_user.id,))
    username = db.cursor.fetchone()[0]
    if username == "unknown":
        await message.answer("""–£ –í–∞—Å –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞! –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–∏ÃÜ 
/createanc""")
    else:
        await my_anc(message, db, message.from_user.id)


async def createanc_start(message, state):
    await message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è.")
    await state.set_state(states.create_anc.name)

async def createanc_name(message, state):
    await state.update_data(name = message.text)
    await message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç.")
    await state.set_state(states.create_anc.age)


async def createanc_age(message, state):
    await state.update_data(age = message.text)
    await message.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å, –¥–≤–∞–≤–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ç–≤–æ–∏–º –ø–æ–ª–æ–º. –í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∞—Ä–∏–∞—Ä–Ω—Ç.", reply_markup = inline.gender())
    await state.set_state(states.create_anc.gender)


async def createanc_gender(callback, state):
    await state.update_data(gender = callback.data)    
    await callback.message.delete()
    await callback.message.answer("–ê —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏, –∫–∞–∫ —Å —Ç–æ–±–æ–π –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è. –ù–∞–ø—Ä–∏–º–µ—Ä (Nickname - –¥–∏—Å–∫–æ—Ä–¥)")
    await state.set_state(states.create_anc.connect)

async def createanc_connect(message, state):
    await state.update_data(connect = message.text)
    await message.answer("–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–π –∏–≥—Ä—ã, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∏—â–µ—à—å —Ç–∏–º–º–µ–π—Ç–æ–≤. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã –∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ")
    await state.set_state(states.create_anc.games)
   
async def createanc_games(message, state):
    await state.update_data(games = message.text.lower())
    await message.answer("–ê —Ç–µ–ø–µ—Ä—å, –≤—ã–±–µ—Ä–∏, –µ—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –º–∏–∫—Ä–æ—Ñ–æ–Ω", reply_markup = inline.micro())
    await state.set_state(states.create_anc.microphone)

async def createanc_microphone(callback, state):
    await state.update_data(microphone = callback.data)
    await callback.message.delete()
    await callback.message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–µ–±–µ –∏ –æ —Å–≤–æ–∏—Ö –∏–≥—Ä–æ–≤—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö.")
    await state.set_state(states.create_anc.description)

async def editanc_description_callback_action(callback, state, edit_anc_state):
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
    await state.set_state(edit_anc_state.description)
    await callback.message.delete()

async def editanc_description_action(db, message, state):
    await state.update_data(description = message.text)
    db.cursor.execute(f"UPDATE users SET description = ? WHERE uid = ?", (message.text, message.from_user.id))
    await message.answer("–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    await state.clear()

async def editanc_games_callback_action(callback, state, edit_anc_state):
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
    await state.set_state(edit_anc_state.game)
    await callback.message.delete()

async def editanc_game_action(db, message, state):
    await state.update_data(game = message.text)
    db.cursor.execute("UPDATE users SET games = ? WHERE uid = ?", (message.text.lower(), message.from_user.id))
    db.db.commit()
    db.db.close
    await message.answer("–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    await state.clear()

async def editanc_connect_callback_action(callback, state, edit_anc_state):
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –í–∞–º–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
    await state.set_state(edit_anc_state.game)
    await callback.message.delete()

async def editanc_connect_action(db, message, state):
    await state.update_data(connect = message.text)
    db.cursor.execute(f"UPDATE users SET connect = ? WHERE uid = ?", (message.text, message.from_user.id))
    db.db.commit()
    db.db.close
    await message.answer("–î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
    await state.clear()

async def editanc_delete_callback_action(callback, db):
    db.cursor.execute("UPDATE users SET username = 'unknown', age = 0, gender = 'unknown', connect = 'none', microphone = 'unknown', description = 'none', games = 'none' WHERE uid = ?", (callback.from_user.id,))
    db.db.commit()
    db.db.close
    await callback.message.answer("–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞! –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é, –Ω–∞–ø–∏—à–∏—Ç–µ /createanc") 
    await callback.message.delete()

async def createanc_description(message, state, user_dict, db):
    await state.update_data(description = message.text)
    user_dict[message.from_user.id] = await state.get_data()
    await state.clear()
    await message.answer("–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤–µ—Å—Ç–∏ –ø–æ–∏—Å–∫ —Ç–∏–º–º–µ–π—Ç–æ–≤.")
    db.cursor.execute("UPDATE users SET username = ? WHERE uid = ?", ( user_dict[message.from_user.id]['name'], message.from_user.id,))
    db.cursor.execute("UPDATE users SET age = ? WHERE uid = ?", ( user_dict[message.from_user.id]['age'], message.from_user.id,))
    db.cursor.execute("UPDATE users SET gender = ? WHERE uid = ?", ( user_dict[message.from_user.id]['gender'], message.from_user.id,))
    db.cursor.execute("UPDATE users SET connect = ? WHERE uid = ?", ( user_dict[message.from_user.id]['connect'], message.from_user.id,))
    db.cursor.execute("UPDATE users SET microphone = ? WHERE uid = ?", ( user_dict[message.from_user.id]['microphone'], message.from_user.id,))
    db.cursor.execute("UPDATE users SET games = ? WHERE uid = ?", ( user_dict[message.from_user.id]['games'], message.from_user.id,))
    db.cursor.execute("UPDATE users SET description = ? WHERE uid = ?", ( user_dict[message.from_user.id]['description'], message.from_user.id,))
    db.db.commit()

async def my_anc(message, database, uid):
    database.cursor.execute("SELECT username FROM users WHERE uid = ?", (uid,))
    user_name = database.cursor.fetchone()[0]
    database.cursor.execute("SELECT age FROM users WHERE uid = ?", (uid,))
    age = database.cursor.fetchone()[0]
    database.cursor.execute("SELECT gender FROM users WHERE uid = ?", (uid,))
    gender = database.cursor.fetchone()[0]
    database.cursor.execute("SELECT connect FROM users WHERE uid = ?", (uid,))
    connect = database.cursor.fetchone()[0]
    database.cursor.execute("SELECT games FROM users WHERE uid = ?", (uid,))
    games = database.cursor.fetchone()[0]
    database.cursor.execute("SELECT microphone FROM users WHERE uid = ?", (uid,))
    micro = database.cursor.fetchone()[0]
    database.cursor.execute("SELECT description FROM users WHERE uid = ?", (uid,))
    descr = database.cursor.fetchone()[0]
    await message.answer(f"""üìß–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:
                         
üë§–ù–∏–∫–Ω–µ–π–º: {user_name}
üéÇ–í–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç
üë´–ü–æ–ª: {gender}
üìû–°–≤—è–∑—å: {connect}
üïπ–ò–≥—Ä—ã: {games}
üé§–ú–∏–∫—Ä–æ—Ñ–æ–Ω: {micro}
üìÉ–û–ø–∏—Å–∞–Ω–∏–µ: {descr} """)



async def admin_panel(callback):
    if callback.from_user.id in UID:
        await callback.answer(f"""–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–µ—ã–π –≤–∞—Ä–∏–∞–Ω—Ç""", reply_markup = inline.admin_panel())
    else:
        await callback.answer(f"""–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!""")


async def search_random_user(message, db, uid):
    db.cursor.execute("SELECT games FROM users WHERE uid = ?", (uid,))
    game = db.cursor.fetchone()[0]
    db.cursor.execute("SELECT * FROM users WHERE games = ? AND uid != ? ORDER BY RANDOM() LIMIT 1", (game, uid,))
    random_user = db.cursor.fetchone()
    if random_user is None:
        await message.amswer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞—à–ª–æ—Å—å –ª—é–¥–µ–π, –∏–≥—Ä–∞—é—â–∏—Ö –≤ –¥–∞–Ω–Ω—É—é –∏–≥—Ä—É :(")
    else:
        r_uid = random_user[1]
        user_name = random_user[2]
        age = random_user[3]
        gender = random_user[4]
        connect = random_user[5]
        games = random_user[8]
        micro = random_user[6]
        descr = random_user[7]
        msg = await message.answer(f"""üìß–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
                                
üë§–ù–∏–∫–Ω–µ–π–º: {user_name}
üéÇ–í–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç
üë´–ü–æ–ª: {gender}
üìû–°–≤—è–∑—å: {connect}
üïπ–ò–≥—Ä–∞: {games}
üé§–ú–∏–∫—Ä–æ—Ñ–æ–Ω: {micro}
üìÉ–û–ø–∏—Å–∞–Ω–∏–µ: {descr} """, reply_markup = inline.search_buttons())
        msg_text = f"""{msg.text} 
        
uid –∞–Ω–∫–µ—Ç—ã {r_uid}

uid –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è {uid}"""
        await message.delete()
        return msg_text
    
async def ban_ancet_callback_action(callback, state, ban_state):
    await callback.message.answer("–í–≤–µ–¥–∏ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –∑–∞–±–∞–Ω–∏—Ç—å.")
    await state.set_state(ban_state.uid)

async def ban_ancet_action(message, state, ban_state):
    await state.update_data(uid = message.text)
    await message.answer("–í–≤–µ–¥–∏ —Å—Å—Ä–æ–∫ –≤ –¥–Ω—è—Ö, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–¥–∞—Ç—å –±–∞–Ω.") 
    await state.set_state(ban_state.ban_days)

async def ban_days_action(state, ban_dict, db, message, bot):
    await state.update_data(ban_days = message.text)
    ban_dict["ban"] = await state.get_data()
    db.cursor.execute(f"UPDATE users SET ban_days = ? WHERE uid = ?", (message.text, ban_dict["ban"]['uid']))
    db.db.commit()
    db.db.close
    await message.answer(f"–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id {ban_dict['ban']['uid']} –∑–∞–±–∞–Ω–µ–Ω–∞ –Ω–∞ {ban_dict['ban']['ban_days']} –¥–Ω–µ–π! /admin")
    await bot.send_message(chat_id=6822091159, text=f"""–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id {ban_dict['ban']['uid']} –∑–∞–±–∞–Ω–µ–Ω–∞ –Ω–∞ {ban_dict['ban']['ban_days']} –¥–Ω–µ–π! 
–∞–¥–º–∏–Ω: {message.from_user.first_name}
uid {message.from_user.id}""")
    await state.clear()